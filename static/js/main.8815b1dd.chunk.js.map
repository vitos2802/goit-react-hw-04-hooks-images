{"version":3,"sources":["components/Container/Container.module.css","services/imageApi.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","imageApi","fetchImage","inputValue","page","fetch","then","res","ok","json","Promise","reject","Error","Searchbar","onSubmit","useState","value","setValue","className","e","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","ImageGalleryItem","webformatURL","data","onClick","src","alt","data-largeimageurl","ImageGallery","images","map","id","largeImageURL","Button","children","modalRoot","document","querySelector","Modal","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","Container","s","App","query","setQuery","setImages","setPage","isLoading","setIsLoading","showModal","setShowModal","showButton","setShowButton","activeImage","setActiveImage","setError","hits","length","success","prevImages","scrollTo","top","documentElement","scrollHeight","behavior","catch","toggleModal","largeimageurl","dataset","color","height","width","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8815b1dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3iy5m\"};","const key = '18770359-69995c75016210012c9ceb955';\n\nconst fetchImage = (inputValue, page) => {\n  return fetch(\n    `https://pixabay.com/api/?q=${inputValue}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error(`Нет картинки с названием ${inputValue}`));\n  });\n};\n\nconst imageApi = {\n  fetchImage,\n};\n\nexport default imageApi;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleValueChange = e => {\n    setValue(e.currentTarget.value.toLowerCase());\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (value.trim() === '') {\n      toast.error('Wow so easy !');\n      return;\n    }\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={value}\n          onChange={handleValueChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ webformatURL, data, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt=\"\"\n        data-largeimageurl={data}\n        onClick={e => onClick(e)}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  data: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from './ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images, onClick }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            data={largeImageURL}\n            onClick={onClick}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onClick, children }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackDropClick = e => {\n    if (e.target === e.currentTarget) onClose();\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackDropClick}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalRoot,\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Modal;\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport imageApi from './services/imageApi';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from 'react-loader-spinner';\nimport Modal from './components/Modal';\nimport Container from './components/Container';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showButton, setShowButton] = useState(false);\n  const [activeImage, setActiveImage] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchImages = () => {\n      imageApi\n        .fetchImage(query, page)\n        .then(res => {\n          const { hits } = res;\n\n          if (!hits.length) {\n            toast.error(`По запросу ${query} ничего нет!`);\n          }\n\n          if (!!hits.length) {\n            toast.success('Запрос выполнен успешно!');\n            setImages(prevImages => [...prevImages, ...hits]);\n            setIsLoading(false);\n            setShowButton(true);\n          }\n\n          if (hits.length < 12) {\n            setShowButton(false);\n          }\n\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => setError(error));\n    };\n    query && fetchImages();\n  }, [query, page]);\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n    setImages([]);\n    setPage(1);\n    setShowButton(false);\n    setError(error);\n  };\n\n  const handleLoadMore = () => {\n    setIsLoading(true);\n    setPage(page => (page += 1));\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const openModal = ({ target }) => {\n    setActiveImage(target.dataset);\n    toggleModal();\n  };\n\n  return (\n    <Container>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={activeImage.largeimageurl} alt=\"\" />\n        </Modal>\n      )}\n\n      <Searchbar onSubmit={handleFormSubmit} />\n      {images && <ImageGallery images={images} onClick={openModal} />}\n      {showButton && (\n        <Button onClick={handleLoadMore}>\n          {isLoading ? (\n            <Loader type=\"Puff\" color=\"#00BFFF\" height={10} width={10} />\n          ) : (\n            'Load more...'\n          )}\n        </Button>\n      )}\n      <ToastContainer />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}